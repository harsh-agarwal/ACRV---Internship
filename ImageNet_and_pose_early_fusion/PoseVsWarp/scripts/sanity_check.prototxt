# Enter your network definition here.
# Use Shift+Enter to update the visualization.

# Enter your network definition here.
# Use Shift+Enter to update the visualization.

## A sanity check prototxt to see everything works
input: "six_dof_perturbed"
input_dim: 64
input_dim: 6
input_dim: 1
input_dim: 1


layer {
  name: "imL"
  type: "ImageData"
  top: "imL"
  top: "fakel1"
  transform_param {
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  image_data_param {
    source: "../resource/NYUv2_4/Itgt_train.txt"
    new_width: 320
    new_height: 240 
    batch_size: 64
  }
}

layer {
  name: "crop_imL"
  type: "Crop"
  bottom: "imL"
  bottom: "fakel1"
  top: "cropped_imL"
  crop_param {
    axis: 2
    offset: 7
    offset: 47
    size: 227
    size: 227
  }
}

layer {
  name: "imR"
  type: "ImageData"
  top: "imR"
  top: "fakel2"
  transform_param {
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  image_data_param {
    source: "../resource/NYUv2_4/Isrc_train.txt"
    new_width: 320
    new_height: 240
    batch_size: 64
  }
}

layer {
  name: "crop_imR"
  type: "Crop"
  bottom: "imR"
  bottom: "fakel2"
  top: "cropped_imR"
  crop_param {
    axis: 2
    offset: 7
    offset: 47
    size: 227
    size: 227
  }
}

layer {
  name: "depth_of_imageL"
  type: "ImageData"
  top: "depth_of_imageL"
  top: "fakel3"
  transform_param {
    scale: 0.0002
  }
  image_data_param {
    source: "../resource/NYUv2_4/Dtgt_train.txt"
    new_width: 320
    new_height: 240 
    batch_size: 64
    is_color: false 
  }
}

layer {
  name: "crop_depth_to_227x227"
  type: "Crop"
  bottom: "depth_of_imageL"
  bottom: "fakel3"
  top: "cropped_depth"
  crop_param {
    axis: 2
    offset: 7
    offset: 47
    size: 227
    size: 227
  }
}

layer {
  bottom: "cropped_depth"
  top: "mask_for_loss"
  name: "create_a_mask_using_depth"
  type: "Threshold"
  threshold_param{
		threshold: 1e-12
	}
}


layer {
  name: "transformation_gt"
  type: "Data"
  top: "transformation_gt"
  data_param {
    source: "../resource/NYUv2_4/camMotion_lmdb_train"
    # type of DB: LEVELDB or LMDB (LMDB supports concurrent reads)
    backend: LMDB
    # batch processing improves efficiency.
    batch_size: 64
  }
}


layer {
  name: "converting_depth_mask_to_three_channel"
  bottom: "mask_for_loss"
  bottom: "mask_for_loss"
  bottom: "mask_for_loss"
  top: "three_channel_depth_mask"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: "reduction"
  type: "Reduction"
  bottom: "six_dof_perturbed"
  top: "six_dof_perturbed_2"
  reduction_param {
    axis: 3 # reduce all dims after first
    operation: MEAN  # use absolute sum
  }
}

layer {
  name: "reduction"
  type: "Reduction"
  bottom: "six_dof_perturbed_2"
  top: "six_dof_perturbed_final"
  reduction_param {
    axis: 2 # reduce all dims after first
    operation: MEAN  # use absolute sum
  }
}
layer {
  type: "Python"
  name: "get_4x4_transformation_matrix"
  top: "get_4x4_transformation_matrix"
  bottom: "six_dof_perturbed_final"
  
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: "pygeometry"
    # the layer name -- the class name in the module
    layer: "SE3_Generator"
    param_str : '{"threshold": 1e-12}' #I just gave a value need to check HELP 
  }
}

layer {
  type: "Python"
  name: "get_the_3D_points"
  top: "get_the_3D_points"
 
  bottom: "cropped_depth"
  bottom: "get_4x4_transformation_matrix" 	
	  
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: "pygeometry"
    # the layer name -- the class name in the module
    layer: "Transform3DGrid"
		param_str : '{"fx":  259.425 ,"fy" : 259.73 , "cx" : 116.3 , "cy": 120.36 }' #put in suitable values HELP
  }
}

layer {
  type: "Python"
  name: "get_the_flow"
  top: "get_the_flow"
  bottom: "get_the_3D_points" 
	
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: 'pygeometry'
    # the layer name -- the class name in the module
    layer: 'PinHoleCamProj'
    param_str:'{"fx":  259.425 ,"fy" : 259.73 , "cx" : 116.3 , "cy": 120.36,"grid_normalized": False , "flowFlag": True}' #Need to check whether the values assigned are correct ? HELP 
  }
}

layer {
  name: "slice_hflow_and_vflow_for_R2L"
  type: "Slice"
  bottom: "get_the_flow"
  top: "h_flow"
  top: "v_flow"
  slice_param {
    axis: 1
    slice_point: 1
    
  }
}

layer {
  name: "normimL"
  type: "Scale"
  bottom: "cropped_imL"
  top: "imL1"
  param {
    lr_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 0.004
    }
  }
}

layer {
  name: "normimR"
  type: "Scale"
  bottom: "cropped_imR"
  top: "imR1"
  param {
    lr_mult: 0
  }
  scale_param {
    filler {
      type: "constant"
      value: 0.004
    }
  }
}

layer {
  name: "backwarp_R2L"
  type: "Warping"
  bottom: "imR1"
  bottom: "h_flow"
  bottom: "v_flow"
  propagate_down: false 
  propagate_down: true 
  propagate_down: true 
  top: "back_warp"
}
###################################################

layer
{
  name: "masking_the_backwarp_created"
  type: "Eltwise"
  bottom: "back_warp"
  bottom: "three_channel_depth_mask"
  top: "back_warp_masked"
  eltwise_param {
  operation: PROD
  }
}

layer {
  name: "average_backwarp"
  type: "Reduction"
  bottom: "back_warp_masked"
  top: "average_back_warp"
  reduction_param {
    axis: 0 # reduce all dims after first
    operation: MEAN # use absolute sum
  }
}

layer
{
  name: "masking_the_target_image"
  type: "Eltwise"
  bottom: "imL1"
  bottom: "three_channel_depth_mask"
  top: "imL_masked"
  eltwise_param {
  operation: PROD
  }
}


layer {
  name: "warp_error_R2L"
  type: "AbsLoss"
  bottom: "back_warp_masked"
  bottom: "imL_masked"
  top: "warp_error"
  loss_weight: 1
}

layer {
  name: "transformation_loss"
  type: "AbsLoss"
  bottom: "transformation_gt"
  bottom: "get_4x4_transformation_matrix"
  top: "transformation_error"
  loss_weight: 0
}

###############################################

layer {
  name: "sil1"
  type: "Silence"
  bottom: "fakel1"
}
layer {
  name: "sil1"
  type: "Silence"
  bottom: "fakel2"
}

layer {
  name: "sil1"
  type: "Silence"
  bottom: "fakel3"
}



